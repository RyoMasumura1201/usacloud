// Copyright 2017-2020 The Usacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"log"
	"path/filepath"

	"github.com/sacloud/usacloud/tools/utils"

	"github.com/sacloud/usacloud/tools"
)

var (
	destination = "pkg/cmd"
	ctx         = tools.NewGenerateContext()
)

func main() {
	log.SetFlags(0)
	log.SetPrefix("gen-cli-normalize-flag-name: ")

	for _, resource := range ctx.Resources {
		filePath := filepath.Join(destination, resource.CLINormalizeFlagsFileName())
		utils.WriteFileWithTemplate(&utils.TemplateConfig{
			OutputPath: filepath.Join(utils.ProjectRootPath(), filePath),
			Template:   srcTemplate,
			Parameter:  resource,
		})
	}
}

var srcTemplate = `// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-normalize-flag-name'; DO NOT EDIT

package cmd

import (
	"github.com/spf13/pflag"
)

{{ range .Commands }}
func {{ .CLINormalizeFlagsFuncName }}(_ *pflag.FlagSet, name string) pflag.NormalizedName {
{{ if .HasLongAliases -}}
	switch name {
{{ range .Params }}{{ $name := .FlagName }}{{ range .LongAliases -}}
	case "{{.}}":
		name = "{{ $name }}"
{{ end }}{{ end -}}
	}
{{ end -}}
	return pflag.NormalizedName(name)
}
{{ end }}
`
