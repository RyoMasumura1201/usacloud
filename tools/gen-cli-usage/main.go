// Copyright 2017-2020 The Usacloud Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"log"
	"path/filepath"

	"github.com/sacloud/usacloud/tools/utils"

	"github.com/sacloud/usacloud/tools"
)

var (
	destination = "pkg/cmd"
	ctx         = tools.NewGenerateContext()
)

func main() {
	log.SetFlags(0)
	log.SetPrefix("gen-cli-usage: ")

	for _, resource := range ctx.Resources {
		filePath := filepath.Join(destination, resource.CLIUsageFileName())
		utils.WriteFileWithTemplate(&utils.TemplateConfig{
			OutputPath: filepath.Join(utils.ProjectRootPath(), filePath),
			Template:   srcTemplate,
			Parameter:  resource,
		})
	}
}

var srcTemplate = `// Code generated by 'github.com/sacloud/usacloud/tools/gen-cli-usage'; DO NOT EDIT

package cmd

import (
	"github.com/spf13/cobra"
	"github.com/spf13/pflag"
)

func {{ .CommandOrderFunc }}(cmd *cobra.Command) []*commandSet {
	var commands []*commandSet
	{{ range .CategorizedCommands -}}
	{
		set := &commandSet {
			title: "{{.DisplayName}}",
		}
		{{ range .Commands -}}
		set.commands = append(set.commands, lookupCmd(cmd, "{{.Name}}"))
		{{ end -}}
		commands = append(commands, set)
	}
	{{ end }}
	return commands	
}

{{ range .Commands }}
func {{ .FlagOrderFunc }}(cmd *cobra.Command) []*flagSet {
	var sets []*flagSet
	{{ range .CategorizedParams -}}
	{
		var fs *pflag.FlagSet
		fs = pflag.NewFlagSet("{{.Key}}", pflag.ContinueOnError)
		{{ range .Params -}}
		fs.AddFlag(cmd.LocalFlags().Lookup("{{ .FlagName }}"))
		{{ end -}}
		sets = append(sets, &flagSet{
			title: "{{.DisplayName}}",
			flags: fs,
		})
	}
	{{ end }}
	return sets	
}
{{ end }}
`
